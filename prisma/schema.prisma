// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  description  String
  priceInCents Int
  stock        Int
  isAvailable  Boolean  @default(true)
  image        String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  ordered      OrderItem[]
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   Int
  reviews      Review[]
  cart         CartItem[]
  style        Style @relation(fields: [styleId], references: [id])
  styleId      Int
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String    // Or integrate authentication
  name        String
  orders      Order[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviews     Review[]
  cart        Cart[]
}

model Order {
  id      Int       @id @default(autoincrement())
  totalInCents Float
  createdAt    DateTime  @default(now())

  items        OrderItem[]
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1) // Number of this product in the order
  price     Float    // Price at the time of purchase
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  products    Product[]
}

model Style {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  products    Product[]
}

model Review {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  rating      Int       
  comment     String?
  createdAt   DateTime  @default(now())
}

model Cart {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  items       CartItem[]
  updatedAt   DateTime    @updatedAt
}

model CartItem {
  id          Int       @id @default(autoincrement())
  cart        Cart      @relation(fields: [cartId], references: [id])
  cartId      Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  quantity    Int       @default(1)
}

